{"version":3,"file":"index.cjs.js","sources":["../src/index.ts"],"sourcesContent":["/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport { create, defineProperty, isUndefined, isBoolean, globalThis } from '@lwc/shared';\n// When deprecating a feature flag, ensure that it is also no longer set in the application. For\n// example, in core, the flag should be removed from LwcPermAndPrefUtilImpl.java\nconst features = {\n    DUMMY_TEST_FLAG: null,\n    ENABLE_FORCE_NATIVE_SHADOW_MODE_FOR_TEST: null,\n    ENABLE_MIXED_SHADOW_MODE: null,\n    ENABLE_NATIVE_CUSTOM_ELEMENT_LIFECYCLE: null,\n    ENABLE_WIRE_SYNC_EMIT: null,\n    DISABLE_LIGHT_DOM_UNSCOPED_CSS: null,\n    ENABLE_FROZEN_TEMPLATE: null,\n    DISABLE_ARIA_REFLECTION_POLYFILL: null,\n};\n// eslint-disable-next-line no-restricted-properties\nif (!globalThis.lwcRuntimeFlags) {\n    Object.defineProperty(globalThis, 'lwcRuntimeFlags', { value: create(null) });\n}\n// eslint-disable-next-line no-restricted-properties\nconst flags = globalThis.lwcRuntimeFlags;\n/**\n * Set the value at runtime of a given feature flag. This method only be invoked once per feature\n * flag. It is meant to be used during the app initialization.\n */\nexport function setFeatureFlag(name, value) {\n    if (!isBoolean(value)) {\n        const message = `Failed to set the value \"${value}\" for the runtime feature flag \"${name}\". Runtime feature flags can only be set to a boolean value.`;\n        if (process.env.NODE_ENV !== 'production') {\n            throw new TypeError(message);\n        }\n        else {\n            // eslint-disable-next-line no-console\n            console.error(message);\n            return;\n        }\n    }\n    if (isUndefined(features[name])) {\n        // eslint-disable-next-line no-console\n        console.info(`Attempt to set a value on an unknown feature flag \"${name}\" resulted in a NOOP.`);\n        return;\n    }\n    // This may seem redundant, but `process.env.NODE_ENV === 'test-karma-lwc'` is replaced by Karma tests\n    if (process.env.NODE_ENV === 'test-karma-lwc' || process.env.NODE_ENV !== 'production') {\n        // Allow the same flag to be set more than once outside of production to enable testing\n        flags[name] = value;\n    }\n    else {\n        // Disallow the same flag to be set more than once in production\n        const runtimeValue = flags[name];\n        if (!isUndefined(runtimeValue)) {\n            // eslint-disable-next-line no-console\n            console.error(`Failed to set the value \"${value}\" for the runtime feature flag \"${name}\". \"${name}\" has already been set with the value \"${runtimeValue}\".`);\n            return;\n        }\n        defineProperty(flags, name, { value });\n    }\n}\n/**\n * Set the value at runtime of a given feature flag. This method should only be used for testing\n * purposes. It is a no-op when invoked in production mode.\n */\nexport function setFeatureFlagForTest(name, value) {\n    // This may seem redundant, but `process.env.NODE_ENV === 'test-karma-lwc'` is replaced by Karma tests\n    if (process.env.NODE_ENV === 'test-karma-lwc' || process.env.NODE_ENV !== 'production') {\n        setFeatureFlag(name, value);\n    }\n}\nexport default features;\nexport { flags as runtimeFlags, // backwards compatibility for before this was renamed\nflags as lwcRuntimeFlags, };\n//# sourceMappingURL=index.js.map"],"names":["globalThis","create","isBoolean","isUndefined","defineProperty"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACK,MAAC,QAAQ,GAAG;AACjB,IAAI,eAAe,EAAE,IAAI;AACzB,IAAI,wCAAwC,EAAE,IAAI;AAClD,IAAI,wBAAwB,EAAE,IAAI;AAClC,IAAI,sCAAsC,EAAE,IAAI;AAChD,IAAI,qBAAqB,EAAE,IAAI;AAC/B,IAAI,8BAA8B,EAAE,IAAI;AACxC,IAAI,sBAAsB,EAAE,IAAI;AAChC,IAAI,gCAAgC,EAAE,IAAI;AAC1C,EAAE;AACF;AACA,IAAI,CAACA,iBAAU,CAAC,eAAe,EAAE;AACjC,IAAI,MAAM,CAAC,cAAc,CAACA,iBAAU,EAAE,iBAAiB,EAAE,EAAE,KAAK,EAAEC,aAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAClF,CAAC;AACD;AACK,MAAC,KAAK,GAAGD,iBAAU,CAAC,gBAAgB;AACzC;AACA;AACA;AACA;AACO,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;AAC5C,IAAI,IAAI,CAACE,gBAAS,CAAC,KAAK,CAAC,EAAE;AAC3B,QAAQ,MAAM,OAAO,GAAG,CAAC,yBAAyB,EAAE,KAAK,CAAC,gCAAgC,EAAE,IAAI,CAAC,4DAA4D,CAAC,CAAC;AAC/J,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;AACnD,YAAY,MAAM,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC;AACzC,SAAS;AACT,aAAa;AACb;AACA,YAAY,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACnC,YAAY,OAAO;AACnB,SAAS;AACT,KAAK;AACL,IAAI,IAAIC,kBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AACrC;AACA,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,mDAAmD,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC;AACxG,QAAQ,OAAO;AACf,KAAK;AACL;AACA,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,gBAAgB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;AAC5F;AACA,QAAQ,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AAC5B,KAAK;AACL,SAAS;AACT;AACA,QAAQ,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AACzC,QAAQ,IAAI,CAACA,kBAAW,CAAC,YAAY,CAAC,EAAE;AACxC;AACA,YAAY,OAAO,CAAC,KAAK,CAAC,CAAC,yBAAyB,EAAE,KAAK,CAAC,gCAAgC,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,uCAAuC,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;AACzK,YAAY,OAAO;AACnB,SAAS;AACT,QAAQC,qBAAc,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;AAC/C,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACO,SAAS,qBAAqB,CAAC,IAAI,EAAE,KAAK,EAAE;AACnD;AACA,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,gBAAgB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;AAC5F,QAAQ,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACpC,KAAK;AACL;;;;;;;;;;;"}