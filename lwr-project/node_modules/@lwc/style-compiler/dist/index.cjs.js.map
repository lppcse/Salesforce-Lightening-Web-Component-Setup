{"version":3,"file":"index.cjs.js","sources":["../src/utils/message.ts","../src/utils/selectors-scoping.ts","../src/utils/dir-pseudoclass.ts","../src/serialize.ts","../src/no-id-selectors/validate.ts","../src/css-import/transform.ts","../src/utils/rtl.ts","../src/utils/selector-parser.ts","../src/selector-scoping/validate.ts","../src/selector-scoping/transform.ts","../src/dir-pseudo-class/transform.ts","../src/scope-at-rules/transform.ts","../src/postcss-lwc-plugin.ts","../src/transform.ts"],"sourcesContent":["const PLUGIN_NAME = '@lwc/style-compiler';\nconst IMPORT_TYPE = 'import';\nexport function importMessage(id) {\n    return {\n        plugin: PLUGIN_NAME,\n        type: IMPORT_TYPE,\n        id,\n    };\n}\nexport function isImportMessage(message) {\n    return message.type === IMPORT_TYPE && message.id;\n}\n//# sourceMappingURL=message.js.map","/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nexport const HOST_ATTRIBUTE = '__hostAttribute__';\nexport const SHADOW_ATTRIBUTE = '__shadowAttribute__';\n//# sourceMappingURL=selectors-scoping.js.map","/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nexport const DIR_ATTRIBUTE_NATIVE_LTR = `__dirAttributeNativeLtr__`;\nexport const DIR_ATTRIBUTE_NATIVE_RTL = `__dirAttributeNativeRtl__`;\nexport const DIR_ATTRIBUTE_SYNTHETIC_LTR = `__dirAttributeSyntheticLtr__`;\nexport const DIR_ATTRIBUTE_SYNTHETIC_RTL = `__dirAttributeSyntheticRtl__`;\n//# sourceMappingURL=dir-pseudoclass.js.map","/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport postcss from 'postcss';\nimport matchAll from 'string.prototype.matchall';\nimport { KEY__SCOPED_CSS, LWC_VERSION_COMMENT } from '@lwc/shared';\nimport { isImportMessage } from './utils/message';\nimport { HOST_ATTRIBUTE, SHADOW_ATTRIBUTE } from './utils/selectors-scoping';\nimport { DIR_ATTRIBUTE_NATIVE_RTL, DIR_ATTRIBUTE_NATIVE_LTR, DIR_ATTRIBUTE_SYNTHETIC_RTL, DIR_ATTRIBUTE_SYNTHETIC_LTR, } from './utils/dir-pseudoclass';\nvar TokenType;\n(function (TokenType) {\n    TokenType[\"text\"] = \"text\";\n    TokenType[\"expression\"] = \"expression\";\n    TokenType[\"identifier\"] = \"identifier\";\n    TokenType[\"divider\"] = \"divider\";\n})(TokenType || (TokenType = {}));\n// \"1400 binary expressions are enough to reach Node.js maximum call stack size\"\n// https://github.com/salesforce/lwc/issues/1726\n// The vast majority of stylesheet functions are much less than this, so we can set the limit lower\n// to play it safe.\nconst BINARY_EXPRESSION_LIMIT = 100;\n// Javascript identifiers used for the generation of the style module\nconst HOST_SELECTOR_IDENTIFIER = 'hostSelector';\nconst SHADOW_SELECTOR_IDENTIFIER = 'shadowSelector';\nconst SUFFIX_TOKEN_IDENTIFIER = 'suffixToken';\nconst USE_ACTUAL_HOST_SELECTOR = 'useActualHostSelector';\nconst USE_NATIVE_DIR_PSEUDOCLASS = 'useNativeDirPseudoclass';\nconst TOKEN = 'token';\nconst STYLESHEET_IDENTIFIER = 'stylesheet';\nexport default function serialize(result, config) {\n    const { messages } = result;\n    const importedStylesheets = messages.filter(isImportMessage).map((message) => message.id);\n    const disableSyntheticShadow = Boolean(config.disableSyntheticShadowSupport);\n    const scoped = Boolean(config.scoped);\n    let buffer = '';\n    for (let i = 0; i < importedStylesheets.length; i++) {\n        buffer += `import ${STYLESHEET_IDENTIFIER + i} from \"${importedStylesheets[i]}\";\\n`;\n    }\n    if (importedStylesheets.length) {\n        buffer += '\\n';\n    }\n    const stylesheetList = importedStylesheets.map((_str, i) => `${STYLESHEET_IDENTIFIER + i}`);\n    const serializedStyle = serializeCss(result).trim();\n    if (serializedStyle) {\n        // inline function\n        if (disableSyntheticShadow && !scoped) {\n            // If synthetic shadow DOM support is disabled and this is not a scoped stylesheet, then the\n            // function signature will always be:\n            //   stylesheet(token = undefined, useActualHostSelector = true, useNativeDirPseudoclass = true)\n            // This means that we can just have a function that takes no arguments and returns a string,\n            // reducing the bundle size when minified.\n            buffer += `function ${STYLESHEET_IDENTIFIER}() {\\n`;\n            buffer += `  var ${TOKEN};\\n`; // undefined\n            buffer += `  var ${USE_ACTUAL_HOST_SELECTOR} = true;\\n`;\n            buffer += `  var ${USE_NATIVE_DIR_PSEUDOCLASS} = true;\\n`;\n        }\n        else {\n            buffer += `function ${STYLESHEET_IDENTIFIER}(${TOKEN}, ${USE_ACTUAL_HOST_SELECTOR}, ${USE_NATIVE_DIR_PSEUDOCLASS}) {\\n`;\n        }\n        // For scoped stylesheets, we use classes, but for synthetic shadow DOM, we use attributes\n        if (scoped) {\n            buffer += `  var ${SHADOW_SELECTOR_IDENTIFIER} = ${TOKEN} ? (\".\" + ${TOKEN}) : \"\";\\n`;\n            buffer += `  var ${HOST_SELECTOR_IDENTIFIER} = ${TOKEN} ? (\".\" + ${TOKEN} + \"-host\") : \"\";\\n`;\n        }\n        else {\n            buffer += `  var ${SHADOW_SELECTOR_IDENTIFIER} = ${TOKEN} ? (\"[\" + ${TOKEN} + \"]\") : \"\";\\n`;\n            buffer += `  var ${HOST_SELECTOR_IDENTIFIER} = ${TOKEN} ? (\"[\" + ${TOKEN} + \"-host]\") : \"\";\\n`;\n        }\n        // Used for keyframes\n        buffer += `  var ${SUFFIX_TOKEN_IDENTIFIER} = ${TOKEN} ? (\"-\" + ${TOKEN}) : \"\";\\n`;\n        buffer += `  return ${serializedStyle};\\n`;\n        buffer += `  /*${LWC_VERSION_COMMENT}*/\\n`;\n        buffer += `}\\n`;\n        if (scoped) {\n            // Mark the stylesheet as scoped so that we can distinguish it later at runtime\n            buffer += `${STYLESHEET_IDENTIFIER}.${KEY__SCOPED_CSS} = true;\\n`;\n        }\n        // add import at the end\n        stylesheetList.push(STYLESHEET_IDENTIFIER);\n    }\n    // exports\n    if (stylesheetList.length) {\n        buffer += `export default [${stylesheetList.join(', ')}];`;\n    }\n    else {\n        buffer += `export default undefined;`;\n    }\n    return buffer;\n}\nfunction reduceTokens(tokens) {\n    return [{ type: TokenType.text, value: '' }, ...tokens, { type: TokenType.text, value: '' }]\n        .reduce((acc, token) => {\n        const prev = acc[acc.length - 1];\n        if (token.type === TokenType.text && prev && prev.type === TokenType.text) {\n            // clone the previous token to avoid mutating it in-place\n            acc[acc.length - 1] = {\n                type: prev.type,\n                value: prev.value + token.value,\n            };\n            return acc;\n        }\n        else {\n            return [...acc, token];\n        }\n    }, [])\n        .filter((t) => t.value !== '');\n}\nfunction normalizeString(str) {\n    return str.replace(/(\\r\\n\\t|\\n|\\r\\t)/gm, '').trim();\n}\nfunction generateExpressionFromTokens(tokens) {\n    const serializedTokens = reduceTokens(tokens).map(({ type, value }) => {\n        switch (type) {\n            // Note that we don't expect to get a TokenType.divider here. It should be converted into an\n            // expression elsewhere.\n            case TokenType.text:\n                return JSON.stringify(value);\n            // Expressions may be concatenated with \" + \", in which case we must remove ambiguity\n            case TokenType.expression:\n                return `(${value})`;\n            default:\n                return value;\n        }\n    });\n    if (serializedTokens.length === 0) {\n        return '';\n    }\n    else if (serializedTokens.length === 1) {\n        return serializedTokens[0];\n    }\n    else if (serializedTokens.length < BINARY_EXPRESSION_LIMIT) {\n        return serializedTokens.join(' + ');\n    }\n    else {\n        // #1726 Using Array.prototype.join() instead of a standard \"+\" operator to concatenate the\n        // string to avoid running into a maximum call stack error when the stylesheet is parsed\n        // again by the bundler.\n        return `[${serializedTokens.join(', ')}].join('')`;\n    }\n}\nfunction areTokensEqual(left, right) {\n    return left.type === right.type && left.value === right.value;\n}\nfunction calculateNumDuplicatedTokens(left, right) {\n    // Walk backwards until we find a token that is different between left and right\n    let i = 0;\n    for (; i < left.length && i < right.length; i++) {\n        const currentLeft = left[left.length - 1 - i];\n        const currentRight = right[right.length - 1 - i];\n        if (!areTokensEqual(currentLeft, currentRight)) {\n            break;\n        }\n    }\n    return i;\n}\n// For `:host` selectors, the token lists for native vs synthetic will be identical at the end of\n// each list. So as an optimization, we can de-dup these tokens.\n// See: https://github.com/salesforce/lwc/issues/3224#issuecomment-1353520052\nfunction deduplicateHostTokens(nativeHostTokens, syntheticHostTokens) {\n    const numDuplicatedTokens = calculateNumDuplicatedTokens(nativeHostTokens, syntheticHostTokens);\n    const numUniqueNativeTokens = nativeHostTokens.length - numDuplicatedTokens;\n    const numUniqueSyntheticTokens = syntheticHostTokens.length - numDuplicatedTokens;\n    const uniqueNativeTokens = nativeHostTokens.slice(0, numUniqueNativeTokens);\n    const uniqueSyntheticTokens = syntheticHostTokens.slice(0, numUniqueSyntheticTokens);\n    const nativeExpression = generateExpressionFromTokens(uniqueNativeTokens);\n    const syntheticExpression = generateExpressionFromTokens(uniqueSyntheticTokens);\n    // Generate a conditional ternary to switch between native vs synthetic for the unique tokens\n    const conditionalToken = {\n        type: TokenType.expression,\n        value: `(${USE_ACTUAL_HOST_SELECTOR} ? ${nativeExpression} : ${syntheticExpression})`,\n    };\n    return [\n        conditionalToken,\n        // The remaining tokens are the same between native and synthetic\n        ...syntheticHostTokens.slice(numUniqueSyntheticTokens),\n    ];\n}\nfunction serializeCss(result) {\n    const tokens = [];\n    let currentRuleTokens = [];\n    let nativeHostTokens;\n    // Walk though all nodes in the CSS...\n    postcss.stringify(result.root, (part, node, nodePosition) => {\n        // When consuming the beginning of a rule, first we tokenize the selector\n        if (node && node.type === 'rule' && nodePosition === 'start') {\n            currentRuleTokens.push(...tokenizeCss(normalizeString(part)));\n            // When consuming the end of a rule we normalize it and produce a new one\n        }\n        else if (node && node.type === 'rule' && nodePosition === 'end') {\n            currentRuleTokens.push({ type: TokenType.text, value: part });\n            // If we are in synthetic shadow or scoped light DOM, we don't want to have native :host selectors\n            // Note that postcss-lwc-plugin should ensure that _isNativeHost appears before _isSyntheticHost\n            if (node._isNativeHost) {\n                // Save native tokens so in the next rule we can apply a conditional ternary\n                nativeHostTokens = [...currentRuleTokens];\n            }\n            else if (node._isSyntheticHost) {\n                /* istanbul ignore if */\n                if (!nativeHostTokens) {\n                    throw new Error('Unexpected host rules ordering');\n                }\n                const hostTokens = deduplicateHostTokens(nativeHostTokens, currentRuleTokens);\n                tokens.push(...hostTokens);\n                nativeHostTokens = undefined;\n            }\n            else {\n                /* istanbul ignore if */\n                if (nativeHostTokens) {\n                    throw new Error('Unexpected host rules ordering');\n                }\n                tokens.push(...currentRuleTokens);\n            }\n            // Reset rule\n            currentRuleTokens = [];\n            // When inside a declaration, tokenize it and push it to the current token list\n        }\n        else if (node && node.type === 'decl') {\n            currentRuleTokens.push(...tokenizeCss(part));\n        }\n        else if (node && node.type === 'atrule') {\n            // Certain atrules have declaration associated with for example @font-face. We need to add the rules tokens\n            // when it's the case.\n            if (currentRuleTokens.length) {\n                tokens.push(...currentRuleTokens);\n                currentRuleTokens = [];\n            }\n            tokens.push(...tokenizeCss(normalizeString(part)));\n        }\n        else {\n            // When inside anything else but a comment just push it\n            if (!node || node.type !== 'comment') {\n                currentRuleTokens.push({ type: TokenType.text, value: normalizeString(part) });\n            }\n        }\n    });\n    return generateExpressionFromTokens(tokens);\n}\n// Given any CSS string, replace the scope tokens from the CSS with code to properly\n// replace it in the stylesheet function.\nfunction tokenizeCss(data) {\n    data = data.replace(/( {2,})/gm, ' '); // remove when there are more than two spaces\n    const tokens = [];\n    const attributes = [\n        SHADOW_ATTRIBUTE,\n        HOST_ATTRIBUTE,\n        DIR_ATTRIBUTE_NATIVE_LTR,\n        DIR_ATTRIBUTE_NATIVE_RTL,\n        DIR_ATTRIBUTE_SYNTHETIC_LTR,\n        DIR_ATTRIBUTE_SYNTHETIC_RTL,\n    ];\n    const regex = new RegExp(`[[-](${attributes.join('|')})]?`, 'g');\n    let lastIndex = 0;\n    for (const match of matchAll(data, regex)) {\n        const index = match.index;\n        const [matchString, substring] = match;\n        if (index > lastIndex) {\n            tokens.push({ type: TokenType.text, value: data.substring(lastIndex, index) });\n        }\n        const identifier = substring === SHADOW_ATTRIBUTE ? SHADOW_SELECTOR_IDENTIFIER : HOST_SELECTOR_IDENTIFIER;\n        if (matchString.startsWith('[')) {\n            if (substring === SHADOW_ATTRIBUTE || substring === HOST_ATTRIBUTE) {\n                // attribute in a selector, e.g. `[__shadowAttribute__]` or `[__hostAttribute__]`\n                tokens.push({\n                    type: TokenType.identifier,\n                    value: identifier,\n                });\n            }\n            else {\n                // :dir pseudoclass placeholder, e.g. `[__dirAttributeNativeLtr__]` or `[__dirAttributeSyntheticRtl__]`\n                const native = substring === DIR_ATTRIBUTE_NATIVE_LTR ||\n                    substring === DIR_ATTRIBUTE_NATIVE_RTL;\n                const dirValue = substring === DIR_ATTRIBUTE_NATIVE_LTR ||\n                    substring === DIR_ATTRIBUTE_SYNTHETIC_LTR\n                    ? 'ltr'\n                    : 'rtl';\n                tokens.push({\n                    type: TokenType.expression,\n                    // use the native :dir() pseudoclass for native shadow, the [dir] attribute otherwise\n                    value: native\n                        ? `${USE_NATIVE_DIR_PSEUDOCLASS} ? ':dir(${dirValue})' : ''`\n                        : `${USE_NATIVE_DIR_PSEUDOCLASS} ? '' : '[dir=\"${dirValue}\"]'`,\n                });\n            }\n        }\n        else {\n            // suffix for an at-rule, e.g. `@keyframes spin-__shadowAttribute__`\n            tokens.push({\n                type: TokenType.identifier,\n                // Suffix the keyframe (i.e. \"-\" plus the token)\n                value: SUFFIX_TOKEN_IDENTIFIER,\n            });\n        }\n        lastIndex = index + matchString.length;\n    }\n    if (lastIndex < data.length) {\n        tokens.push({ type: TokenType.text, value: data.substring(lastIndex, data.length) });\n    }\n    return tokens;\n}\n//# sourceMappingURL=serialize.js.map","export default function (root) {\n    root.walkIds((node) => {\n        const message = `Invalid usage of id selector '#${node.value}'. Try using a class selector or some other selector.`;\n        throw root.error(message, {\n            index: node.sourceIndex,\n            word: node.value,\n        });\n    });\n}\n//# sourceMappingURL=validate.js.map","import valueParser from 'postcss-value-parser';\nimport { importMessage } from '../utils/message';\nexport default function process(root, result, isScoped) {\n    root.walkAtRules('import', (node) => {\n        if (isScoped) {\n            throw node.error(`Invalid import statement, imports are not allowed in *.scoped.css files.`);\n        }\n        // Ensure @import are at the top of the file\n        let prev = node.prev();\n        while (prev) {\n            if (prev.type === 'comment' || (prev.type === 'atrule' && prev.name === 'import')) {\n                prev = prev.prev();\n            }\n            else {\n                throw prev.error('@import must precede all other statements');\n            }\n        }\n        const { nodes: params } = valueParser(node.params);\n        // Ensure import match the following syntax:\n        //     @import \"foo\";\n        //     @import \"./foo.css\";\n        if (!params.length || params[0].type !== 'string' || !params[0].value) {\n            throw node.error(`Invalid import statement, unable to find imported module.`);\n        }\n        if (params.length > 1) {\n            throw node.error(`Invalid import statement, import statement only support a single parameter.`);\n        }\n        // Add the imported to results messages\n        const message = importMessage(params[0].value);\n        result.messages.push(message);\n        // Remove the import from the generated css\n        node.remove();\n    });\n}\n//# sourceMappingURL=transform.js.map","/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport { isPseudoClass } from 'postcss-selector-parser';\nexport function isDirPseudoClass(node) {\n    return isPseudoClass(node) && node.value === ':dir';\n}\n//# sourceMappingURL=rtl.js.map","export function findNode(container, predicate) {\n    return container && container.nodes && container.nodes.find(predicate);\n}\nexport function replaceNodeWith(oldNode, ...newNodes) {\n    if (newNodes.length) {\n        const { parent } = oldNode;\n        if (!parent) {\n            throw new Error(`Impossible to replace root node.`);\n        }\n        newNodes.forEach((node) => {\n            parent.insertBefore(oldNode, node);\n        });\n        oldNode.remove();\n    }\n}\nexport function trimNodeWhitespaces(node) {\n    if (node && node.spaces) {\n        node.spaces.before = '';\n        node.spaces.after = '';\n    }\n}\n//# sourceMappingURL=selector-parser.js.map","const DEPRECATED_SELECTORS = new Set(['/deep/', '::shadow', '>>>']);\nconst UNSUPPORTED_SELECTORS = new Set([':root', ':host-context']);\nconst TEMPLATE_DIRECTIVES = [/^key$/, /^lwc:*/, /^if:*/, /^for:*/, /^iterator:*/];\nfunction validateSelectors(root) {\n    root.walk((node) => {\n        const { value, sourceIndex } = node;\n        if (value) {\n            // Ensure the selector doesn't use a deprecated CSS selector.\n            if (DEPRECATED_SELECTORS.has(value)) {\n                throw root.error(`Invalid usage of deprecated selector \"${value}\".`, {\n                    index: sourceIndex,\n                    word: value,\n                });\n            }\n            // Ensure the selector doesn't use an unsupported selector.\n            if (UNSUPPORTED_SELECTORS.has(value)) {\n                throw root.error(`Invalid usage of unsupported selector \"${value}\".`, {\n                    index: sourceIndex,\n                    word: value,\n                });\n            }\n        }\n    });\n}\nfunction validateAttribute(root) {\n    root.walkAttributes((node) => {\n        const { attribute: attributeName, sourceIndex } = node;\n        const isTemplateDirective = TEMPLATE_DIRECTIVES.some((directive) => {\n            return directive.test(attributeName);\n        });\n        if (isTemplateDirective) {\n            const message = [\n                `Invalid usage of attribute selector \"${attributeName}\". `,\n                `\"${attributeName}\" is a template directive and therefore not supported in css rules.`,\n            ];\n            throw root.error(message.join(''), {\n                index: sourceIndex,\n                word: attributeName,\n            });\n        }\n    });\n}\nexport default function validate(root) {\n    validateSelectors(root);\n    validateAttribute(root);\n}\n//# sourceMappingURL=validate.js.map","/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport { isPseudoElement, isCombinator, isPseudoClass, attribute, } from 'postcss-selector-parser';\nimport { isDirPseudoClass } from '../utils/rtl';\nimport { SHADOW_ATTRIBUTE, HOST_ATTRIBUTE } from '../utils/selectors-scoping';\nimport { findNode, replaceNodeWith, trimNodeWhitespaces } from '../utils/selector-parser';\nimport validateSelectors from './validate';\nfunction isHostPseudoClass(node) {\n    return isPseudoClass(node) && node.value === ':host';\n}\n/**\n * Add scoping attributes to all the matching selectors:\n *   h1 -> h1[x-foo_tmpl]\n *   p a -> p[x-foo_tmpl] a[x-foo_tmpl]\n */\nfunction scopeSelector(selector) {\n    const compoundSelectors = [[]];\n    // Split the selector per compound selector. Compound selectors are interleaved with combinator nodes.\n    // https://drafts.csswg.org/selectors-4/#typedef-complex-selector\n    selector.each((node) => {\n        if (isCombinator(node)) {\n            compoundSelectors.push([]);\n        }\n        else {\n            const current = compoundSelectors[compoundSelectors.length - 1];\n            current.push(node);\n        }\n    });\n    for (const compoundSelector of compoundSelectors) {\n        // Compound selectors with only a single :dir pseudo class should be scoped, the dir pseudo\n        // class transform will take care of transforming it properly.\n        const containsSingleDirSelector = compoundSelector.length === 1 && isDirPseudoClass(compoundSelector[0]);\n        // Compound selectors containing :host have a special treatment and should not be scoped\n        // like the rest of the complex selectors.\n        const containsHost = compoundSelector.some(isHostPseudoClass);\n        if (!containsSingleDirSelector && !containsHost) {\n            let nodeToScope;\n            // In each compound selector we need to locate the last selector to scope.\n            for (const node of compoundSelector) {\n                if (!isPseudoElement(node)) {\n                    nodeToScope = node;\n                }\n            }\n            const shadowAttribute = attribute({\n                attribute: SHADOW_ATTRIBUTE,\n                value: undefined,\n                raws: {},\n            });\n            if (nodeToScope) {\n                // Add the scoping attribute right after the node scope\n                selector.insertAfter(nodeToScope, shadowAttribute);\n            }\n            else {\n                // Add the scoping token in the first position of the compound selector as a fallback\n                // when there is no node to scope. For example: ::after {}\n                const [firstSelector] = compoundSelector;\n                selector.insertBefore(firstSelector, shadowAttribute);\n                // Move any whitespace before the selector (e.g. \"  ::after\") to before the shadow attribute,\n                // so that the resulting selector is correct (e.g. \"  [attr]::after\", not \"[attr]  ::after\")\n                if (firstSelector && firstSelector.spaces.before) {\n                    shadowAttribute.spaces.before = firstSelector.spaces.before;\n                    const clonedFirstSelector = firstSelector.clone({});\n                    clonedFirstSelector.spaces.before = '';\n                    firstSelector.replaceWith(clonedFirstSelector);\n                }\n            }\n        }\n    }\n}\n/**\n * Mark the :host selector with a placeholder. If the selector has a list of\n * contextual selector it will generate a rule for each of them.\n *   :host -> [x-foo_tmpl-host]\n *   :host(.foo, .bar) -> [x-foo_tmpl-host].foo, [x-foo_tmpl-host].bar\n */\nfunction transformHost(selector) {\n    // Locate the first :host pseudo-class\n    const hostNode = findNode(selector, isHostPseudoClass);\n    if (hostNode) {\n        // Store the original location of the :host in the selector\n        const hostIndex = selector.index(hostNode);\n        // Swap the :host pseudo-class with the host scoping token\n        const hostAttribute = attribute({\n            attribute: HOST_ATTRIBUTE,\n            value: undefined,\n            raws: {},\n        });\n        hostNode.replaceWith(hostAttribute);\n        // Generate a unique contextualized version of the selector for each selector pass as argument\n        // to the :host\n        const contextualSelectors = hostNode.nodes.map((contextSelectors) => {\n            const clonedSelector = selector.clone({});\n            const clonedHostNode = clonedSelector.at(hostIndex);\n            // Add to the compound selector previously containing the :host pseudo class\n            // the contextual selectors.\n            contextSelectors.each((node) => {\n                trimNodeWhitespaces(node);\n                clonedSelector.insertAfter(clonedHostNode, node);\n            });\n            return clonedSelector;\n        });\n        // Replace the current selector with the different variants\n        replaceNodeWith(selector, ...contextualSelectors);\n    }\n}\nexport default function transformSelector(root, transformConfig) {\n    validateSelectors(root);\n    root.each(scopeSelector);\n    if (transformConfig.transformHost) {\n        root.each(transformHost);\n    }\n}\n//# sourceMappingURL=transform.js.map","/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport { attribute, combinator, isCombinator } from 'postcss-selector-parser';\nimport { isDirPseudoClass } from '../utils/rtl';\nimport { DIR_ATTRIBUTE_NATIVE_LTR, DIR_ATTRIBUTE_NATIVE_RTL, DIR_ATTRIBUTE_SYNTHETIC_LTR, DIR_ATTRIBUTE_SYNTHETIC_RTL, } from '../utils/dir-pseudoclass';\nfunction isValidDirValue(value) {\n    return value === 'ltr' || value === 'rtl';\n}\nexport default function (root) {\n    root.nodes.forEach((selector) => {\n        selector.nodes.forEach((node) => {\n            if (!isDirPseudoClass(node)) {\n                return;\n            }\n            const value = node.nodes.toString().trim();\n            if (!isValidDirValue(value)) {\n                throw root.error(`:dir() pseudo class expects \"ltr\" or \"rtl\" for value, but received \"${value}\".`, {\n                    index: node.sourceIndex,\n                    word: node.value,\n                });\n            }\n            // Set placeholders for `:dir()` so we can keep it for native shadow and\n            // replace it with a polyfill for synthetic shadow.\n            //\n            // Native:    `:dir(ltr)`\n            // Synthetic: `[dir=\"ltr\"]`\n            //\n            // The placeholders look like this: `[__dirAttributeNativeLtr__]`\n            // The attribute has no value because it's simpler during serialization, and there\n            // are only two valid values: \"ltr\" and \"rtl\".\n            //\n            // Now consider a more complex selector: `.foo:dir(ltr):not(.bar)`.\n            // For native shadow, we need to leave it as-is. Whereas for synthetic shadow, we need\n            // to convert it to: `[dir=\"ltr\"] .foo:not(.bar)`.\n            // I.e. we need to use a descendant selector (' ' combinator) relying on a `dir`\n            // attribute added to the host element. So we need two placeholders:\n            // `<synthetic_placeholder> .foo<native_placeholder>:not(.bar)`\n            const nativeAttribute = attribute({\n                attribute: value === 'ltr' ? DIR_ATTRIBUTE_NATIVE_LTR : DIR_ATTRIBUTE_NATIVE_RTL,\n                value: undefined,\n                raws: {},\n            });\n            const syntheticAttribute = attribute({\n                attribute: value === 'ltr' ? DIR_ATTRIBUTE_SYNTHETIC_LTR : DIR_ATTRIBUTE_SYNTHETIC_RTL,\n                value: undefined,\n                raws: {},\n            });\n            node.replaceWith(nativeAttribute);\n            // If the selector is not empty and if the first node in the selector is not already a\n            // \" \" combinator, we need to use the descendant selector format\n            const shouldAddDescendantCombinator = selector.first && !isCombinator(selector.first) && selector.first.value !== ' ';\n            if (shouldAddDescendantCombinator) {\n                selector.insertBefore(selector.first, combinator({\n                    value: ' ',\n                }));\n                // Add the [dir] attribute in front of the \" \" combinator, i.e. as an ancestor\n                selector.insertBefore(selector.first, syntheticAttribute);\n            }\n            else {\n                // Otherwise there's no need for the descendant selector, so we can skip adding the\n                // space combinator and just put the synthetic placeholder next to the native one\n                selector.insertBefore(nativeAttribute, syntheticAttribute);\n            }\n        });\n    });\n}\n//# sourceMappingURL=transform.js.map","import { SHADOW_ATTRIBUTE } from '../utils/selectors-scoping';\n// Subset of prefixes for animation-related names that we expect people might be using.\n// The most important is -webkit, which is actually part of the spec now. All -webkit prefixes\n// are listed here: https://developer.mozilla.org/en-US/docs/Web/CSS/Webkit_Extensions\n// -moz is also still supported as of Firefox 95.\n// We could probably get away with just doing -webkit and -moz (since -ms never seems\n// to have existed for keyframes/animations, and Opera has used Blink since 2013), but\n// covering all the popular ones will at least make the compiled code more consistent\n// for developers who are using all the variants.\n// List based on a subset from https://github.com/wooorm/vendors/blob/2f489ad/index.js\nconst VENDOR_PREFIXES = ['moz', 'ms', 'o', 'webkit'];\n// create a list like ['animation', '-webkit-animation', ...]\nfunction getAllNames(name) {\n    return new Set([name, ...VENDOR_PREFIXES.map((prefix) => `-${prefix}-${name}`)]);\n}\nconst ANIMATION = getAllNames('animation');\nconst ANIMATION_NAME = getAllNames('animation-name');\nexport default function process(root) {\n    const knownNames = new Set();\n    root.walkAtRules((atRule) => {\n        // Note that @-webkit-keyframes, @-moz-keyframes, etc. are not actually a thing supported\n        // in any browser, even though you'll see it on some StackOverflow answers.\n        if (atRule.name === 'keyframes') {\n            const { params } = atRule;\n            knownNames.add(params);\n            atRule.params = `${params}-${SHADOW_ATTRIBUTE}`;\n        }\n    });\n    root.walkRules((rule) => {\n        rule.walkDecls((decl) => {\n            if (ANIMATION.has(decl.prop)) {\n                // Use a simple heuristic of breaking up the tokens by whitespace. We could use\n                // a dedicated animation prop parser (e.g.\n                // https://github.com/hookhookun/parse-animation-shorthand) but it's\n                // probably overkill.\n                const tokens = decl.value\n                    .trim()\n                    .split(/\\s+/g)\n                    .map((token) => knownNames.has(token) ? `${token}-${SHADOW_ATTRIBUTE}` : token);\n                decl.value = tokens.join(' ');\n            }\n            else if (ANIMATION_NAME.has(decl.prop)) {\n                if (knownNames.has(decl.value)) {\n                    decl.value = `${decl.value}-${SHADOW_ATTRIBUTE}`;\n                }\n            }\n        });\n    });\n}\n//# sourceMappingURL=transform.js.map","import postCssSelector from 'postcss-selector-parser';\nimport validateIdSelectors from './no-id-selectors/validate';\nimport transformImport from './css-import/transform';\nimport transformSelectorScoping from './selector-scoping/transform';\nimport transformDirPseudoClass from './dir-pseudo-class/transform';\nimport transformAtRules from './scope-at-rules/transform';\nfunction shouldTransformSelector(rule) {\n    var _a;\n    // @keyframe at-rules are special, rules inside are not standard selectors and should not be\n    // scoped like any other rules.\n    return ((_a = rule.parent) === null || _a === void 0 ? void 0 : _a.type) !== 'atrule' || rule.parent.name !== 'keyframes';\n}\nfunction selectorProcessorFactory(transformConfig) {\n    return postCssSelector((root) => {\n        validateIdSelectors(root);\n        transformSelectorScoping(root, transformConfig);\n        transformDirPseudoClass(root);\n    });\n}\nexport default function postCssLwcPlugin(options) {\n    // We need 2 types of selectors processors, since transforming the :host selector make the selector\n    // unusable when used in the context of the native shadow and vice-versa.\n    // This distinction also applies to light DOM in scoped (synthetic-like) vs unscoped (native-like) mode.\n    const nativeShadowSelectorProcessor = selectorProcessorFactory({\n        transformHost: false,\n    });\n    const syntheticShadowSelectorProcessor = selectorProcessorFactory({\n        transformHost: true,\n    });\n    return (root, result) => {\n        transformImport(root, result, options.scoped);\n        transformAtRules(root);\n        root.walkRules((rule) => {\n            if (!shouldTransformSelector(rule)) {\n                return;\n            }\n            // Let transform the selector with the 2 processors.\n            const syntheticSelector = syntheticShadowSelectorProcessor.processSync(rule);\n            const nativeSelector = nativeShadowSelectorProcessor.processSync(rule);\n            rule.selector = syntheticSelector;\n            // If the resulting selector are different it means that the selector use the :host selector. In\n            // this case we need to duplicate the CSS rule and assign the other selector.\n            if (syntheticSelector !== nativeSelector) {\n                // The cloned selector is inserted before the currently processed selector to avoid processing\n                // again the cloned selector.\n                const currentRule = rule;\n                const clonedRule = rule.cloneBefore();\n                clonedRule.selector = nativeSelector;\n                // Safe a reference to each other\n                clonedRule._isNativeHost = true;\n                currentRule._isSyntheticHost = true;\n            }\n        });\n    };\n}\n//# sourceMappingURL=postcss-lwc-plugin.js.map","/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport postcss from 'postcss';\nimport { getAPIVersionFromNumber } from '@lwc/shared';\nimport serialize from './serialize';\nimport postcssLwc from './postcss-lwc-plugin';\nexport function transform(src, id, config = {}) {\n    if (src === '') {\n        return { code: 'export default undefined' };\n    }\n    const scoped = !!config.scoped;\n    const apiVersion = getAPIVersionFromNumber(config.apiVersion);\n    const plugins = [postcssLwc({ scoped, apiVersion })];\n    const result = postcss(plugins).process(src, { from: id }).sync();\n    return { code: serialize(result, config) };\n}\n//# sourceMappingURL=transform.js.map"],"names":["LWC_VERSION_COMMENT","KEY__SCOPED_CSS","process","isPseudoClass","isCombinator","isPseudoElement","attribute","validateSelectors","combinator","transformSelectorScoping","transformImport","transformAtRules","getAPIVersionFromNumber","postcssLwc"],"mappings":"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"}