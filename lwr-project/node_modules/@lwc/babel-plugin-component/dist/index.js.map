{"version":3,"file":"index.js","sources":["../src/constants.ts","../src/component.ts","../src/utils.ts","../src/decorators/api/shared.ts","../src/decorators/api/validate.ts","../src/decorators/api/transform.ts","../src/decorators/api/index.ts","../src/decorators/wire/shared.ts","../src/decorators/wire/validate.ts","../src/decorators/wire/transform.ts","../src/decorators/wire/index.ts","../src/decorators/track/index.ts","../src/decorators/index.ts","../src/dedupe-imports.ts","../src/dynamic-imports.ts","../src/scope-css-imports.ts","../src/compiler-version-number.ts","../src/index.ts"],"sourcesContent":["/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// This set is for attributes that have a camel cased property name\n// For example, div.tabIndex.\n// We do not want users to define @api properties with these names\n// Because the template will never call them. It'll always call the camel\n// cased version.\nconst AMBIGUOUS_PROP_SET = new Map([\n    ['bgcolor', 'bgColor'],\n    ['accesskey', 'accessKey'],\n    ['contenteditable', 'contentEditable'],\n    ['contextmenu', 'contextMenu'],\n    ['tabindex', 'tabIndex'],\n    ['maxlength', 'maxLength'],\n    ['maxvalue', 'maxValue'],\n]);\n// This set is for attributes that can never be defined\n// by users on their components.\n// We throw for these.\nconst DISALLOWED_PROP_SET = new Set(['is', 'class', 'slot', 'style']);\nconst LWC_PACKAGE_ALIAS = 'lwc';\nconst LWC_PACKAGE_EXPORTS = {\n    BASE_COMPONENT: 'LightningElement',\n    API_DECORATOR: 'api',\n    TRACK_DECORATOR: 'track',\n    WIRE_DECORATOR: 'wire',\n};\nconst LWC_COMPONENT_PROPERTIES = {\n    PUBLIC_PROPS: 'publicProps',\n    PUBLIC_METHODS: 'publicMethods',\n    WIRE: 'wire',\n    TRACK: 'track',\n};\nconst DECORATOR_TYPES = {\n    PROPERTY: 'property',\n    GETTER: 'getter',\n    SETTER: 'setter',\n    METHOD: 'method',\n};\nconst REGISTER_COMPONENT_ID = 'registerComponent';\nconst REGISTER_DECORATORS_ID = 'registerDecorators';\nconst TEMPLATE_KEY = 'tmpl';\nconst COMPONENT_NAME_KEY = 'sel';\nconst API_VERSION_KEY = 'apiVersion';\nexport { AMBIGUOUS_PROP_SET, DECORATOR_TYPES, DISALLOWED_PROP_SET, LWC_PACKAGE_ALIAS, LWC_PACKAGE_EXPORTS, LWC_COMPONENT_PROPERTIES, REGISTER_COMPONENT_ID, REGISTER_DECORATORS_ID, TEMPLATE_KEY, COMPONENT_NAME_KEY, API_VERSION_KEY, };\n//# sourceMappingURL=constants.js.map","/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport { basename, extname } from 'path';\nimport { addDefault, addNamed } from '@babel/helper-module-imports';\nimport { getAPIVersionFromNumber } from '@lwc/shared';\nimport { COMPONENT_NAME_KEY, LWC_PACKAGE_ALIAS, REGISTER_COMPONENT_ID, TEMPLATE_KEY, API_VERSION_KEY, } from './constants';\nfunction getBaseName(classPath) {\n    const ext = extname(classPath);\n    return basename(classPath, ext);\n}\nfunction importDefaultTemplate(path, state) {\n    const { filename } = state.file.opts;\n    const componentName = getBaseName(filename);\n    return addDefault(path, `./${componentName}.html`, {\n        nameHint: TEMPLATE_KEY,\n    });\n}\nfunction needsComponentRegistration(path) {\n    return ((path.isIdentifier() && path.node.name !== 'undefined' && path.node.name !== 'null') ||\n        path.isCallExpression() ||\n        path.isClassDeclaration() ||\n        path.isConditionalExpression());\n}\nfunction getComponentRegisteredName(t, state) {\n    const { namespace, name } = state.opts;\n    const kebabCasedName = name === null || name === void 0 ? void 0 : name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const componentName = namespace && kebabCasedName ? `${namespace}-${kebabCasedName}` : '';\n    return t.stringLiteral(componentName);\n}\nexport default function ({ types: t }) {\n    function createRegisterComponent(declarationPath, state) {\n        const registerComponentId = addNamed(declarationPath, REGISTER_COMPONENT_ID, LWC_PACKAGE_ALIAS);\n        const templateIdentifier = importDefaultTemplate(declarationPath, state);\n        const statementPath = declarationPath.getStatementParent();\n        const componentRegisteredName = getComponentRegisteredName(t, state);\n        let node = declarationPath.node;\n        if (declarationPath.isClassDeclaration()) {\n            const hasIdentifier = t.isIdentifier(node.id);\n            if (hasIdentifier) {\n                statementPath.insertBefore(node);\n                node = node.id;\n            }\n            else {\n                // if it does not have an id, we can treat it as a ClassExpression\n                t.toExpression(node);\n            }\n        }\n        const apiVersion = getAPIVersionFromNumber(state.opts.apiVersion);\n        // Example:\n        //     registerComponent(cmp, {\n        //       tmpl: template,\n        //       sel: 'x-foo',\n        //       apiVersion: '58'\n        //     })\n        return t.callExpression(registerComponentId, [\n            node,\n            t.objectExpression([\n                t.objectProperty(t.identifier(TEMPLATE_KEY), templateIdentifier),\n                t.objectProperty(t.identifier(COMPONENT_NAME_KEY), componentRegisteredName),\n                // It's important that, at this point, we have an APIVersion rather than just a number.\n                // The client needs to trust the server that it's providing an actual known API version\n                t.objectProperty(t.identifier(API_VERSION_KEY), t.numericLiteral(apiVersion)),\n            ]),\n        ]);\n    }\n    return {\n        ExportDefaultDeclaration(path, state) {\n            const implicitResolution = !state.opts.isExplicitImport;\n            if (implicitResolution) {\n                const declaration = path.get('declaration');\n                if (needsComponentRegistration(declaration)) {\n                    declaration.replaceWith(createRegisterComponent(declaration, state));\n                }\n            }\n        },\n    };\n}\n//# sourceMappingURL=component.js.map","/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport lineColumn from 'line-column';\nimport { generateErrorMessage } from '@lwc/errors';\nimport { LWC_PACKAGE_ALIAS } from './constants';\nfunction isClassMethod(classMethod, properties = {}) {\n    const { kind = 'method', name } = properties;\n    return (classMethod.isClassMethod({ kind }) &&\n        (!name || classMethod.get('key').isIdentifier({ name })) &&\n        (properties.static === undefined || classMethod.node.static === properties.static));\n}\nfunction isGetterClassMethod(classMethod, properties = {}) {\n    return isClassMethod(classMethod, {\n        kind: 'get',\n        name: properties.name,\n        static: properties.static,\n    });\n}\nfunction isSetterClassMethod(classMethod, properties = {}) {\n    return isClassMethod(classMethod, {\n        kind: 'set',\n        name: properties.name,\n        static: properties.static,\n    });\n}\nfunction getEngineImportsStatements(path) {\n    const programPath = path.isProgram()\n        ? path\n        : path.findParent((node) => node.isProgram());\n    return programPath.get('body').filter((node) => {\n        const source = node.get('source');\n        return node.isImportDeclaration() && source.isStringLiteral({ value: LWC_PACKAGE_ALIAS });\n    });\n}\nfunction getEngineImportSpecifiers(path) {\n    const imports = getEngineImportsStatements(path);\n    return (imports\n        // Flat-map the specifier list for each import statement\n        .flatMap((importStatement) => importStatement.get('specifiers'))\n        // Skip ImportDefaultSpecifier and ImportNamespaceSpecifier\n        .filter((specifier) => specifier.type === 'ImportSpecifier')\n        // Get the list of specifiers with their name\n        .map((specifier) => {\n        const imported = specifier.get('imported').node\n            .name;\n        return { name: imported, path: specifier };\n    }));\n}\nfunction normalizeLocation(source) {\n    const location = (source.node && (source.node.loc || source.node._loc)) || null;\n    if (!location) {\n        return null;\n    }\n    const code = source.hub.getCode();\n    if (!code) {\n        return {\n            line: location.start.line,\n            column: location.start.column,\n        };\n    }\n    const lineFinder = lineColumn(code);\n    const startOffset = lineFinder.toIndex(location.start.line, location.start.column + 1);\n    const endOffset = lineFinder.toIndex(location.end.line, location.end.column) + 1;\n    const length = endOffset - startOffset;\n    return {\n        line: location.start.line,\n        column: location.start.column,\n        start: startOffset,\n        length,\n    };\n}\nfunction generateError(source, { errorInfo, messageArgs }, state) {\n    const message = generateErrorMessage(errorInfo, messageArgs);\n    const error = source.buildCodeFrameError(message);\n    error.filename = state.filename;\n    error.loc = normalizeLocation(source);\n    error.lwcCode = errorInfo && errorInfo.code;\n    return error;\n}\nfunction incrementMetricCounter(metric, state) {\n    var _a;\n    (_a = state.opts.instrumentation) === null || _a === void 0 ? void 0 : _a.incrementCounter(metric);\n}\nexport { isClassMethod, isGetterClassMethod, isSetterClassMethod, generateError, getEngineImportSpecifiers, incrementMetricCounter, };\n//# sourceMappingURL=utils.js.map","/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport { LWC_PACKAGE_EXPORTS } from '../../constants';\nconst { API_DECORATOR } = LWC_PACKAGE_EXPORTS;\nfunction isApiDecorator(decorator) {\n    return decorator.name === API_DECORATOR;\n}\nexport { isApiDecorator };\n//# sourceMappingURL=shared.js.map","/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport { DecoratorErrors } from '@lwc/errors';\nimport { generateError } from '../../utils';\nimport { AMBIGUOUS_PROP_SET, DECORATOR_TYPES, DISALLOWED_PROP_SET, LWC_PACKAGE_EXPORTS, } from '../../constants';\nimport { isApiDecorator } from './shared';\nconst { TRACK_DECORATOR } = LWC_PACKAGE_EXPORTS;\nfunction validateConflict(path, decorators, state) {\n    const isPublicFieldTracked = decorators.some((decorator) => decorator.name === TRACK_DECORATOR &&\n        decorator.path.parentPath.node === path.parentPath.node);\n    if (isPublicFieldTracked) {\n        throw generateError(path, {\n            errorInfo: DecoratorErrors.API_AND_TRACK_DECORATOR_CONFLICT,\n        }, state);\n    }\n}\nfunction isBooleanPropDefaultTrue(property) {\n    const propertyValue = property.node.value;\n    return propertyValue && propertyValue.type === 'BooleanLiteral' && propertyValue.value;\n}\nfunction validatePropertyValue(property, state) {\n    if (isBooleanPropDefaultTrue(property)) {\n        throw generateError(property, {\n            errorInfo: DecoratorErrors.INVALID_BOOLEAN_PUBLIC_PROPERTY,\n        }, state);\n    }\n}\nfunction validatePropertyName(property, state) {\n    if (property.node.computed) {\n        throw generateError(property, {\n            errorInfo: DecoratorErrors.PROPERTY_CANNOT_BE_COMPUTED,\n        }, state);\n    }\n    const propertyName = property.get('key.name').node;\n    if (propertyName === 'part') {\n        throw generateError(property, {\n            errorInfo: DecoratorErrors.PROPERTY_NAME_PART_IS_RESERVED,\n            messageArgs: [propertyName],\n        }, state);\n    }\n    else if (propertyName.startsWith('on')) {\n        throw generateError(property, {\n            errorInfo: DecoratorErrors.PROPERTY_NAME_CANNOT_START_WITH_ON,\n            messageArgs: [propertyName],\n        }, state);\n    }\n    else if (propertyName.startsWith('data') && propertyName.length > 4) {\n        throw generateError(property, {\n            errorInfo: DecoratorErrors.PROPERTY_NAME_CANNOT_START_WITH_DATA,\n            messageArgs: [propertyName],\n        }, state);\n    }\n    else if (DISALLOWED_PROP_SET.has(propertyName)) {\n        throw generateError(property, {\n            errorInfo: DecoratorErrors.PROPERTY_NAME_IS_RESERVED,\n            messageArgs: [propertyName],\n        }, state);\n    }\n    else if (AMBIGUOUS_PROP_SET.has(propertyName)) {\n        const camelCased = AMBIGUOUS_PROP_SET.get(propertyName);\n        throw generateError(property, {\n            errorInfo: DecoratorErrors.PROPERTY_NAME_IS_AMBIGUOUS,\n            messageArgs: [propertyName, camelCased],\n        }, state);\n    }\n}\nfunction validateSingleApiDecoratorOnSetterGetterPair(decorators, state) {\n    // keep track of visited class methods\n    const visitedMethods = new Set();\n    decorators.forEach((decorator) => {\n        const { path, decoratedNodeType } = decorator;\n        // since we are validating get/set we only look at @api methods\n        if (isApiDecorator(decorator) &&\n            (decoratedNodeType === DECORATOR_TYPES.GETTER ||\n                decoratedNodeType === DECORATOR_TYPES.SETTER)) {\n            const methodPath = path.parentPath;\n            const methodName = methodPath.get('key.name').node;\n            if (visitedMethods.has(methodName)) {\n                throw generateError(methodPath, {\n                    errorInfo: DecoratorErrors.SINGLE_DECORATOR_ON_SETTER_GETTER_PAIR,\n                    messageArgs: [methodName],\n                }, state);\n            }\n            visitedMethods.add(methodName);\n        }\n    });\n}\nfunction validateUniqueness(decorators, state) {\n    const apiDecorators = decorators.filter(isApiDecorator);\n    for (let i = 0; i < apiDecorators.length; i++) {\n        const { path: currentPath, type: currentType } = apiDecorators[i];\n        const currentPropertyName = currentPath.parentPath.get('key.name').node;\n        for (let j = 0; j < apiDecorators.length; j++) {\n            const { path: comparePath, type: compareType } = apiDecorators[j];\n            const comparePropertyName = comparePath.parentPath.get('key.name')\n                .node;\n            // We will throw if the considered properties have the same name, and when their\n            // are not part of a pair of getter/setter.\n            const haveSameName = currentPropertyName === comparePropertyName;\n            const isDifferentProperty = currentPath !== comparePath;\n            const isGetterSetterPair = (currentType === DECORATOR_TYPES.GETTER &&\n                compareType === DECORATOR_TYPES.SETTER) ||\n                (currentType === DECORATOR_TYPES.SETTER && compareType === DECORATOR_TYPES.GETTER);\n            if (haveSameName && isDifferentProperty && !isGetterSetterPair) {\n                throw generateError(comparePath, {\n                    errorInfo: DecoratorErrors.DUPLICATE_API_PROPERTY,\n                    messageArgs: [currentPropertyName],\n                }, state);\n            }\n        }\n    }\n}\nexport default function validate(decorators, state) {\n    const apiDecorators = decorators.filter(isApiDecorator);\n    if (apiDecorators.length === 0) {\n        return;\n    }\n    apiDecorators.forEach(({ path, decoratedNodeType }) => {\n        validateConflict(path, decorators, state);\n        if (decoratedNodeType !== DECORATOR_TYPES.METHOD) {\n            const property = path.parentPath;\n            validatePropertyName(property, state);\n            validatePropertyValue(property, state);\n        }\n    });\n    validateSingleApiDecoratorOnSetterGetterPair(decorators, state);\n    validateUniqueness(decorators, state);\n}\n//# sourceMappingURL=validate.js.map","import { DECORATOR_TYPES, LWC_COMPONENT_PROPERTIES } from '../../constants';\nimport { isApiDecorator } from './shared';\nconst { PUBLIC_PROPS, PUBLIC_METHODS } = LWC_COMPONENT_PROPERTIES;\nconst PUBLIC_PROP_BIT_MASK = {\n    PROPERTY: 0,\n    GETTER: 1,\n    SETTER: 2,\n};\nfunction getPropertyBitmask(type) {\n    switch (type) {\n        case DECORATOR_TYPES.GETTER:\n            return PUBLIC_PROP_BIT_MASK.GETTER;\n        case DECORATOR_TYPES.SETTER:\n            return PUBLIC_PROP_BIT_MASK.SETTER;\n        default:\n            return PUBLIC_PROP_BIT_MASK.PROPERTY;\n    }\n}\nfunction getSiblingGetSetPairType(propertyName, type, classBodyItems) {\n    const siblingKind = type === DECORATOR_TYPES.GETTER ? 'set' : 'get';\n    const siblingNode = classBodyItems.find((classBodyItem) => {\n        const isClassMethod = classBodyItem.isClassMethod({ kind: siblingKind });\n        const isSamePropertyName = classBodyItem.node.key.name ===\n            propertyName;\n        return isClassMethod && isSamePropertyName;\n    });\n    if (siblingNode) {\n        return siblingKind === 'get' ? DECORATOR_TYPES.GETTER : DECORATOR_TYPES.SETTER;\n    }\n}\nfunction computePublicPropsConfig(publicPropertyMetas, classBodyItems) {\n    return publicPropertyMetas.reduce((acc, { propertyName, decoratedNodeType }) => {\n        if (!(propertyName in acc)) {\n            acc[propertyName] = {};\n        }\n        acc[propertyName].config |= getPropertyBitmask(decoratedNodeType);\n        if (decoratedNodeType === DECORATOR_TYPES.GETTER ||\n            decoratedNodeType === DECORATOR_TYPES.SETTER) {\n            // With the latest decorator spec, only one of the getter/setter pair needs a decorator.\n            // We need to add the proper bitmask for the sibling getter/setter if it exists.\n            const pairType = getSiblingGetSetPairType(propertyName, decoratedNodeType, classBodyItems);\n            if (pairType) {\n                acc[propertyName].config |= getPropertyBitmask(pairType);\n            }\n        }\n        return acc;\n    }, {});\n}\nexport default function transform(t, decoratorMetas, classBodyItems) {\n    const objectProperties = [];\n    const apiDecoratorMetas = decoratorMetas.filter(isApiDecorator);\n    const publicPropertyMetas = apiDecoratorMetas.filter(({ decoratedNodeType }) => decoratedNodeType !== DECORATOR_TYPES.METHOD);\n    if (publicPropertyMetas.length) {\n        const propsConfig = computePublicPropsConfig(publicPropertyMetas, classBodyItems);\n        objectProperties.push(t.objectProperty(t.identifier(PUBLIC_PROPS), t.valueToNode(propsConfig)));\n    }\n    const publicMethodMetas = apiDecoratorMetas.filter(({ decoratedNodeType }) => decoratedNodeType === DECORATOR_TYPES.METHOD);\n    if (publicMethodMetas.length) {\n        const methodNames = publicMethodMetas.map(({ propertyName }) => propertyName);\n        objectProperties.push(t.objectProperty(t.identifier(PUBLIC_METHODS), t.valueToNode(methodNames)));\n    }\n    return objectProperties;\n}\n//# sourceMappingURL=transform.js.map","/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport { LWC_PACKAGE_EXPORTS } from '../../constants';\nimport validate from './validate';\nimport transform from './transform';\nconst { API_DECORATOR } = LWC_PACKAGE_EXPORTS;\nexport default {\n    name: API_DECORATOR,\n    validate,\n    transform,\n};\n//# sourceMappingURL=index.js.map","/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport { LWC_PACKAGE_EXPORTS } from '../../constants';\nconst { WIRE_DECORATOR } = LWC_PACKAGE_EXPORTS;\nfunction isWireDecorator(decorator) {\n    return decorator.name === WIRE_DECORATOR;\n}\nexport { isWireDecorator };\n//# sourceMappingURL=shared.js.map","import { DecoratorErrors } from '@lwc/errors';\nimport { LWC_PACKAGE_EXPORTS } from '../../constants';\nimport { generateError } from '../../utils';\nimport { isWireDecorator } from './shared';\nconst { TRACK_DECORATOR, WIRE_DECORATOR, API_DECORATOR } = LWC_PACKAGE_EXPORTS;\nfunction validateWireParameters(path, state) {\n    const [id, config] = path.get('expression.arguments');\n    if (!id) {\n        throw generateError(path, {\n            errorInfo: DecoratorErrors.ADAPTER_SHOULD_BE_FIRST_PARAMETER,\n        }, state);\n    }\n    const isIdentifier = id.isIdentifier();\n    const isMemberExpression = id.isMemberExpression();\n    if (!isIdentifier && !isMemberExpression) {\n        throw generateError(id, {\n            errorInfo: DecoratorErrors.FUNCTION_IDENTIFIER_SHOULD_BE_FIRST_PARAMETER,\n        }, state);\n    }\n    if (id.isMemberExpression({ computed: true })) {\n        throw generateError(id, {\n            errorInfo: DecoratorErrors.FUNCTION_IDENTIFIER_CANNOT_HAVE_COMPUTED_PROPS,\n        }, state);\n    }\n    // TODO [#3444]: improve member expression computed typechecking\n    // @ts-ignore\n    if (isMemberExpression && !id.get('object').isIdentifier()) {\n        throw generateError(id, {\n            errorInfo: DecoratorErrors.FUNCTION_IDENTIFIER_CANNOT_HAVE_NESTED_MEMBER_EXRESSIONS,\n        }, state);\n    }\n    // TODO [#3444]: improve member expression computed typechecking\n    // Ensure wire adapter is imported (check for member expression or identifier)\n    // @ts-ignore\n    const wireBinding = isMemberExpression ? id.node.object.name : id.node.name;\n    if (!path.scope.getBinding(wireBinding)) {\n        throw generateError(id, {\n            errorInfo: DecoratorErrors.WIRE_ADAPTER_SHOULD_BE_IMPORTED,\n            messageArgs: [id.node.name],\n        }, state);\n    }\n    // ensure wire adapter is a first parameter\n    if (wireBinding &&\n        !path.scope.getBinding(wireBinding).path.isImportSpecifier() &&\n        !path.scope.getBinding(wireBinding).path.isImportDefaultSpecifier()) {\n        throw generateError(id, {\n            errorInfo: DecoratorErrors.IMPORTED_FUNCTION_IDENTIFIER_SHOULD_BE_FIRST_PARAMETER,\n        }, state);\n    }\n    if (config && !config.isObjectExpression()) {\n        throw generateError(config, {\n            errorInfo: DecoratorErrors.CONFIG_OBJECT_SHOULD_BE_SECOND_PARAMETER,\n        }, state);\n    }\n}\nfunction validateUsageWithOtherDecorators(path, decorators, state) {\n    decorators.forEach((decorator) => {\n        if (path !== decorator.path &&\n            decorator.name === WIRE_DECORATOR &&\n            decorator.path.parentPath.node === path.parentPath.node) {\n            throw generateError(path, {\n                errorInfo: DecoratorErrors.ONE_WIRE_DECORATOR_ALLOWED,\n            }, state);\n        }\n        if ((decorator.name === API_DECORATOR || decorator.name === TRACK_DECORATOR) &&\n            decorator.path.parentPath.node === path.parentPath.node) {\n            throw generateError(path, {\n                errorInfo: DecoratorErrors.CONFLICT_WITH_ANOTHER_DECORATOR,\n                messageArgs: [decorator.name],\n            }, state);\n        }\n    });\n}\nexport default function validate(decorators, state) {\n    decorators.filter(isWireDecorator).forEach(({ path }) => {\n        validateUsageWithOtherDecorators(path, decorators, state);\n        validateWireParameters(path, state);\n    });\n}\n//# sourceMappingURL=validate.js.map","import { LWC_COMPONENT_PROPERTIES } from '../../constants';\nimport { isWireDecorator } from './shared';\nconst WIRE_PARAM_PREFIX = '$';\nconst WIRE_CONFIG_ARG_NAME = '$cmp';\nfunction isObservedProperty(configProperty) {\n    const propertyValue = configProperty.get('value');\n    return (propertyValue.isStringLiteral() && propertyValue.node.value.startsWith(WIRE_PARAM_PREFIX));\n}\nfunction getWiredStatic(wireConfig) {\n    return wireConfig\n        .get('properties')\n        .filter((property) => !isObservedProperty(property))\n        .map((path) => path.node);\n}\nfunction getWiredParams(t, wireConfig) {\n    return wireConfig\n        .get('properties')\n        .filter((property) => isObservedProperty(property))\n        .map((path) => {\n        // Need to clone deep the observed property to remove the param prefix\n        const clonedProperty = t.cloneDeep(path.node);\n        clonedProperty.value.value = clonedProperty.value.value.slice(1);\n        return clonedProperty;\n    });\n}\nfunction getGeneratedConfig(t, wiredValue) {\n    let counter = 0;\n    const configBlockBody = [];\n    const configProps = [];\n    const generateParameterConfigValue = (memberExprPaths) => {\n        // Note: When memberExprPaths ($foo.bar) has an invalid identifier (eg: foo..bar, foo.bar[3])\n        //       it should (ideally) resolve in a compilation error during validation phase.\n        //       This is not possible due that platform components may have a param definition which is invalid\n        //       but passes compilation, and throwing at compile time would break such components.\n        //       In such cases where the param does not have proper notation, the config generated will use the bracket\n        //       notation to match the current behavior (that most likely end up resolving that param as undefined).\n        const isInvalidMemberExpr = memberExprPaths.some((maybeIdentifier) => !(t.isValidES3Identifier(maybeIdentifier) && maybeIdentifier.length > 0));\n        const memberExprPropertyGen = !isInvalidMemberExpr\n            ? t.identifier\n            : t.StringLiteral;\n        if (memberExprPaths.length === 1) {\n            return {\n                configValueExpression: t.memberExpression(t.identifier(WIRE_CONFIG_ARG_NAME), memberExprPropertyGen(memberExprPaths[0])),\n            };\n        }\n        const varName = 'v' + ++counter;\n        const varDeclaration = t.variableDeclaration('let', [\n            t.variableDeclarator(t.identifier(varName), t.memberExpression(t.identifier(WIRE_CONFIG_ARG_NAME), memberExprPropertyGen(memberExprPaths[0]), isInvalidMemberExpr)),\n        ]);\n        // Results in: v != null && ... (v = v.i) != null && ... (v = v.(n-1)) != null\n        let conditionTest = t.binaryExpression('!=', t.identifier(varName), t.nullLiteral());\n        for (let i = 1, n = memberExprPaths.length; i < n - 1; i++) {\n            const nextPropValue = t.assignmentExpression('=', t.identifier(varName), t.memberExpression(t.identifier(varName), memberExprPropertyGen(memberExprPaths[i]), isInvalidMemberExpr));\n            conditionTest = t.logicalExpression('&&', conditionTest, t.binaryExpression('!=', nextPropValue, t.nullLiteral()));\n        }\n        // conditionTest ? v.n : undefined\n        const configValueExpression = t.conditionalExpression(conditionTest, t.memberExpression(t.identifier(varName), memberExprPropertyGen(memberExprPaths[memberExprPaths.length - 1]), isInvalidMemberExpr), t.identifier('undefined'));\n        return {\n            varDeclaration,\n            configValueExpression,\n        };\n    };\n    if (wiredValue.static) {\n        Array.prototype.push.apply(configProps, wiredValue.static);\n    }\n    if (wiredValue.params) {\n        wiredValue.params.forEach((param) => {\n            const memberExprPaths = param.value.value.split('.');\n            const paramConfigValue = generateParameterConfigValue(memberExprPaths);\n            configProps.push(t.objectProperty(param.key, paramConfigValue.configValueExpression));\n            if (paramConfigValue.varDeclaration) {\n                configBlockBody.push(paramConfigValue.varDeclaration);\n            }\n        });\n    }\n    configBlockBody.push(t.returnStatement(t.objectExpression(configProps)));\n    const fnExpression = t.functionExpression(null, [t.identifier(WIRE_CONFIG_ARG_NAME)], t.blockStatement(configBlockBody));\n    return t.objectProperty(t.identifier('config'), fnExpression);\n}\nfunction buildWireConfigValue(t, wiredValues) {\n    return t.objectExpression(wiredValues.map((wiredValue) => {\n        const wireConfig = [];\n        if (wiredValue.adapter) {\n            wireConfig.push(t.objectProperty(t.identifier('adapter'), wiredValue.adapter.expression));\n        }\n        if (wiredValue.params) {\n            const dynamicParamNames = wiredValue.params.map((p) => {\n                return t.stringLiteral(t.isIdentifier(p.key) ? p.key.name : p.key.value);\n            });\n            wireConfig.push(t.objectProperty(t.identifier('dynamic'), t.arrayExpression(dynamicParamNames)));\n        }\n        if (wiredValue.isClassMethod) {\n            wireConfig.push(t.objectProperty(t.identifier('method'), t.numericLiteral(1)));\n        }\n        wireConfig.push(getGeneratedConfig(t, wiredValue));\n        return t.objectProperty(t.identifier(wiredValue.propertyName), t.objectExpression(wireConfig));\n    }));\n}\nconst SUPPORTED_VALUE_TO_TYPE_MAP = {\n    StringLiteral: 'string',\n    NumericLiteral: 'number',\n    BooleanLiteral: 'boolean',\n};\nconst scopedReferenceLookup = (scope) => (name) => {\n    const binding = scope.getBinding(name);\n    let type;\n    let value;\n    if (binding) {\n        if (binding.kind === 'module') {\n            // Resolves module import to the name of the module imported\n            // e.g. import { foo } from 'bar' gives value 'bar' for `name == 'foo'\n            const parentPathNode = binding.path.parentPath.node;\n            if (parentPathNode && parentPathNode.source) {\n                type = 'module';\n                value = parentPathNode.source.value;\n            }\n        }\n        else if (binding.kind === 'const') {\n            // Resolves `const foo = 'text';` references to value 'text', where `name == 'foo'`\n            const init = binding.path.node.init;\n            if (init &&\n                SUPPORTED_VALUE_TO_TYPE_MAP[init.type]) {\n                type =\n                    SUPPORTED_VALUE_TO_TYPE_MAP[init.type];\n                value = init\n                    .value;\n            }\n        }\n    }\n    return {\n        type,\n        value,\n    };\n};\nexport default function transform(t, decoratorMetas) {\n    const objectProperties = [];\n    const wiredValues = decoratorMetas.filter(isWireDecorator).map(({ path }) => {\n        const [id, config] = path.get('expression.arguments');\n        const propertyName = path.parentPath.get('key.name').node;\n        const isClassMethod = path.parentPath.isClassMethod({\n            kind: 'method',\n        });\n        const wiredValue = {\n            propertyName,\n            isClassMethod,\n        };\n        if (config) {\n            wiredValue.static = getWiredStatic(config);\n            wiredValue.params = getWiredParams(t, config);\n        }\n        const referenceLookup = scopedReferenceLookup(path.scope);\n        const isMemberExpression = id.isMemberExpression();\n        const isIdentifier = id.isIdentifier();\n        if (isIdentifier || isMemberExpression) {\n            const referenceName = isMemberExpression ? id.node.object.name : id.node.name;\n            const reference = referenceLookup(referenceName);\n            wiredValue.adapter = {\n                name: referenceName,\n                expression: t.cloneDeep(id.node),\n                reference: reference.type === 'module' ? reference.value : undefined,\n            };\n        }\n        return wiredValue;\n    });\n    if (wiredValues.length) {\n        objectProperties.push(t.objectProperty(t.identifier(LWC_COMPONENT_PROPERTIES.WIRE), buildWireConfigValue(t, wiredValues)));\n    }\n    return objectProperties;\n}\n//# sourceMappingURL=transform.js.map","/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport { LWC_PACKAGE_EXPORTS } from '../../constants';\nimport validate from './validate';\nimport transform from './transform';\nconst { WIRE_DECORATOR } = LWC_PACKAGE_EXPORTS;\nexport default {\n    name: WIRE_DECORATOR,\n    validate,\n    transform,\n};\n//# sourceMappingURL=index.js.map","/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport { DecoratorErrors } from '@lwc/errors';\nimport { LWC_COMPONENT_PROPERTIES, LWC_PACKAGE_EXPORTS } from '../../constants';\nimport { generateError } from '../../utils';\nconst { TRACK_DECORATOR } = LWC_PACKAGE_EXPORTS;\nconst TRACK_PROPERTY_VALUE = 1;\nfunction isTrackDecorator(decorator) {\n    return decorator.name === TRACK_DECORATOR;\n}\nfunction validate(decorators, state) {\n    decorators.filter(isTrackDecorator).forEach(({ path }) => {\n        if (!path.parentPath.isClassProperty()) {\n            throw generateError(path, {\n                errorInfo: DecoratorErrors.TRACK_ONLY_ALLOWED_ON_CLASS_PROPERTIES,\n            }, state);\n        }\n    });\n}\nfunction transform(t, decoratorMetas) {\n    const objectProperties = [];\n    const trackDecoratorMetas = decoratorMetas.filter(isTrackDecorator);\n    if (trackDecoratorMetas.length) {\n        const config = trackDecoratorMetas.reduce((acc, meta) => {\n            acc[meta.propertyName] = TRACK_PROPERTY_VALUE;\n            return acc;\n        }, {});\n        objectProperties.push(t.objectProperty(t.identifier(LWC_COMPONENT_PROPERTIES.TRACK), t.valueToNode(config)));\n    }\n    return objectProperties;\n}\nexport default {\n    name: TRACK_DECORATOR,\n    transform,\n    validate,\n};\n//# sourceMappingURL=index.js.map","import { addNamed } from '@babel/helper-module-imports';\nimport { DecoratorErrors } from '@lwc/errors';\nimport { DECORATOR_TYPES, LWC_PACKAGE_ALIAS, REGISTER_DECORATORS_ID } from '../constants';\nimport { generateError, isClassMethod, isGetterClassMethod, isSetterClassMethod } from '../utils';\nimport api from './api';\nimport wire from './wire';\nimport track from './track';\nconst DECORATOR_TRANSFORMS = [api, wire, track];\nconst AVAILABLE_DECORATORS = DECORATOR_TRANSFORMS.map((transform) => transform.name).join(', ');\nfunction isLwcDecoratorName(name) {\n    return DECORATOR_TRANSFORMS.some((transform) => transform.name === name);\n}\n/** Returns a list of all the references to an identifier */\nfunction getReferences(identifier) {\n    return identifier.scope.getBinding(identifier.node.name).referencePaths;\n}\n/** Returns the type of decorator depdending on the property or method if get applied to */\nfunction getDecoratedNodeType(decoratorPath, state) {\n    const propertyOrMethod = decoratorPath.parentPath;\n    if (isClassMethod(propertyOrMethod)) {\n        return DECORATOR_TYPES.METHOD;\n    }\n    else if (isGetterClassMethod(propertyOrMethod)) {\n        return DECORATOR_TYPES.GETTER;\n    }\n    else if (isSetterClassMethod(propertyOrMethod)) {\n        return DECORATOR_TYPES.SETTER;\n    }\n    else if (propertyOrMethod.isClassProperty()) {\n        return DECORATOR_TYPES.PROPERTY;\n    }\n    else {\n        throw generateError(propertyOrMethod, {\n            errorInfo: DecoratorErrors.INVALID_DECORATOR_TYPE,\n        }, state);\n    }\n}\nfunction validateImportedLwcDecoratorUsage(engineImportSpecifiers, state) {\n    engineImportSpecifiers\n        .filter(({ name }) => isLwcDecoratorName(name))\n        .reduce((acc, { name, path }) => {\n        // Get a list of all the  local references\n        const local = path.get('imported');\n        const references = getReferences(local).map((reference) => ({\n            name,\n            reference,\n        }));\n        return [...acc, ...references];\n    }, [])\n        .forEach(({ name, reference }) => {\n        // Get the decorator from the identifier\n        // If the the decorator is:\n        //   - an identifier @track : the decorator is the parent of the identifier\n        //   - a call expression @wire(\"foo\") : the decorator is the grand-parent of the identifier\n        const decorator = reference.parentPath.isDecorator()\n            ? reference.parentPath\n            : reference.parentPath.parentPath;\n        if (!decorator.isDecorator()) {\n            throw generateError(decorator, {\n                errorInfo: DecoratorErrors.IS_NOT_DECORATOR,\n                messageArgs: [name],\n            }, state);\n        }\n        const propertyOrMethod = decorator.parentPath;\n        if (!propertyOrMethod.isClassProperty() && !propertyOrMethod.isClassMethod()) {\n            throw generateError(propertyOrMethod, {\n                errorInfo: DecoratorErrors.IS_NOT_CLASS_PROPERTY_OR_CLASS_METHOD,\n                messageArgs: [name],\n            }, state);\n        }\n    });\n}\nfunction isImportedFromLwcSource(decoratorBinding) {\n    const bindingPath = decoratorBinding.path;\n    return (bindingPath.isImportSpecifier() &&\n        bindingPath.parent.source.value === 'lwc');\n}\n/** Validate the usage of decorator by calling each validation function */\nfunction validate(decorators, state) {\n    for (const { name, path } of decorators) {\n        const binding = path.scope.getBinding(name);\n        if (binding === undefined || !isImportedFromLwcSource(binding)) {\n            throw generateInvalidDecoratorError(path, state);\n        }\n    }\n    DECORATOR_TRANSFORMS.forEach(({ validate }) => validate(decorators, state));\n}\n/** Remove import specifiers. It also removes the import statement if the specifier list becomes empty */\nfunction removeImportedDecoratorSpecifiers(engineImportSpecifiers) {\n    engineImportSpecifiers\n        .filter(({ name }) => isLwcDecoratorName(name))\n        .forEach(({ path }) => {\n        const importStatement = path.parentPath;\n        path.remove();\n        if (importStatement.get('specifiers').length === 0) {\n            importStatement.remove();\n        }\n    });\n}\nfunction generateInvalidDecoratorError(path, state) {\n    const expressionPath = path.get('expression');\n    const { node } = path;\n    const { expression } = node;\n    let name;\n    if (expressionPath.isIdentifier()) {\n        name = expression.name;\n    }\n    else if (expressionPath.isCallExpression()) {\n        name = expression.callee.name;\n    }\n    if (name) {\n        return generateError(path.parentPath, {\n            errorInfo: DecoratorErrors.INVALID_DECORATOR_WITH_NAME,\n            messageArgs: [name, AVAILABLE_DECORATORS, LWC_PACKAGE_ALIAS],\n        }, state);\n    }\n    else {\n        return generateError(path.parentPath, {\n            errorInfo: DecoratorErrors.INVALID_DECORATOR,\n            messageArgs: [AVAILABLE_DECORATORS, LWC_PACKAGE_ALIAS],\n        }, state);\n    }\n}\nfunction collectDecoratorPaths(bodyItems) {\n    return bodyItems.reduce((acc, bodyItem) => {\n        const decorators = bodyItem.get('decorators');\n        if (decorators && decorators.length) {\n            acc.push(...decorators);\n        }\n        return acc;\n    }, []);\n}\nfunction getDecoratorMetadata(decoratorPath, state) {\n    const expressionPath = decoratorPath.get('expression');\n    let name;\n    if (expressionPath.isIdentifier()) {\n        name = expressionPath.node.name;\n    }\n    else if (expressionPath.isCallExpression()) {\n        name = expressionPath.node.callee.name;\n    }\n    else {\n        throw generateInvalidDecoratorError(decoratorPath, state);\n    }\n    const propertyName = decoratorPath.parent.key.name;\n    const decoratedNodeType = getDecoratedNodeType(decoratorPath, state);\n    return {\n        name,\n        propertyName,\n        path: decoratorPath,\n        decoratedNodeType,\n    };\n}\nfunction getMetadataObjectPropertyList(t, decoratorMetas, classBodyItems) {\n    const list = [\n        ...api.transform(t, decoratorMetas, classBodyItems),\n        ...track.transform(t, decoratorMetas),\n        ...wire.transform(t, decoratorMetas),\n    ];\n    const fieldNames = classBodyItems\n        .filter((field) => field.isClassProperty({ computed: false, static: false }))\n        .filter((field) => !field.node.decorators)\n        .map((field) => field.node.key.name);\n    if (fieldNames.length) {\n        list.push(t.objectProperty(t.identifier('fields'), t.valueToNode(fieldNames)));\n    }\n    return list;\n}\nfunction decorators({ types: t }) {\n    function createRegisterDecoratorsCallExpression(path, classExpression, props) {\n        const id = addNamed(path, REGISTER_DECORATORS_ID, LWC_PACKAGE_ALIAS);\n        return t.callExpression(id, [classExpression, t.objectExpression(props)]);\n    }\n    // Babel reinvokes visitors for node reinsertion so we use this to avoid an infinite loop.\n    const visitedClasses = new WeakSet();\n    return {\n        Class(path, state) {\n            const { node } = path;\n            if (visitedClasses.has(node)) {\n                return;\n            }\n            visitedClasses.add(node);\n            const classBodyItems = path.get('body.body');\n            if (classBodyItems.length === 0) {\n                return;\n            }\n            const decoratorPaths = collectDecoratorPaths(classBodyItems);\n            const decoratorMetas = decoratorPaths.map((path) => getDecoratorMetadata(path, state));\n            validate(decoratorMetas, state);\n            const metaPropertyList = getMetadataObjectPropertyList(t, decoratorMetas, classBodyItems);\n            if (metaPropertyList.length === 0) {\n                return;\n            }\n            decoratorPaths.forEach((path) => path.remove());\n            const isAnonymousClassDeclaration = path.isClassDeclaration() && !path.get('id').isIdentifier();\n            const shouldTransformAsClassExpression = path.isClassExpression() || isAnonymousClassDeclaration;\n            if (shouldTransformAsClassExpression) {\n                // Example:\n                //      export default class extends LightningElement {}\n                // Output:\n                //      export default registerDecorators(class extends LightningElement {});\n                // if it does not have an id, we can treat it as a ClassExpression\n                const classExpression = t.toExpression(node);\n                path.replaceWith(createRegisterDecoratorsCallExpression(path, classExpression, metaPropertyList));\n            }\n            else {\n                // Example: export default class NamedClass extends LightningElement {}\n                // Output:\n                //      export default class NamedClass extends LightningElement {}\n                //      registerDecorators(NamedClass);\n                // Note: This will be further transformed\n                const statementPath = path.getStatementParent();\n                statementPath.insertAfter(t.expressionStatement(createRegisterDecoratorsCallExpression(path, node.id, metaPropertyList)));\n            }\n        },\n    };\n}\nexport { decorators, removeImportedDecoratorSpecifiers, validateImportedLwcDecoratorUsage };\n//# sourceMappingURL=index.js.map","/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction defaultImport(t, specifiers) {\n    const defaultImport = specifiers.find((s) => t.isImportDefaultSpecifier(s));\n    return defaultImport && defaultImport.local.name;\n}\nexport default function ({ types: t }) {\n    return function (path) {\n        const body = path.get('body');\n        const importStatements = body.filter((s) => s.isImportDeclaration());\n        const visited = new Map();\n        importStatements.forEach((importPath) => {\n            const sourceLiteral = importPath.node.source;\n            // If the import is of the type import * as X, just ignore it since we can't dedupe\n            if (importPath.node.specifiers.some((_) => t.isImportNamespaceSpecifier(_))) {\n                return;\n            }\n            // If we have seen the same source, we will try to dedupe it\n            if (visited.has(sourceLiteral.value)) {\n                const visitedImport = visited.get(sourceLiteral.value);\n                const visitedSpecifiers = visitedImport.node.specifiers;\n                const visitedDefaultImport = defaultImport(t, visitedSpecifiers);\n                // We merge all the named imports unless is a default with the same name\n                let canImportBeRemoved = true;\n                importPath.node.specifiers.forEach((s) => {\n                    if (visitedDefaultImport && t.isImportDefaultSpecifier(s)) {\n                        if (visitedDefaultImport !== s.local.name) {\n                            canImportBeRemoved = false;\n                        }\n                    }\n                    else {\n                        visitedSpecifiers.push(s);\n                    }\n                });\n                if (canImportBeRemoved) {\n                    importPath.remove();\n                }\n                // We need to sort the imports due to a bug in babel where default must be first\n                visitedSpecifiers.sort((a) => (t.isImportDefaultSpecifier(a) ? -1 : 1));\n            }\n            else {\n                visited.set(sourceLiteral.value, importPath);\n            }\n        });\n    };\n}\n//# sourceMappingURL=dedupe-imports.js.map","import { addNamed } from '@babel/helper-module-imports';\nimport { CompilerMetrics, LWCClassErrors } from '@lwc/errors';\nimport { generateError, incrementMetricCounter } from './utils';\nfunction getImportSource(path) {\n    return path.parentPath.get('arguments.0');\n}\nfunction validateImport(sourcePath, state) {\n    if (!sourcePath.isStringLiteral()) {\n        throw generateError(sourcePath, {\n            errorInfo: LWCClassErrors.INVALID_DYNAMIC_IMPORT_SOURCE_STRICT,\n            messageArgs: [String(sourcePath)],\n        }, state);\n    }\n}\n/*\n * Expected API for this plugin:\n * { dynamicImports: { loader: string, strictSpecifier: boolean } }\n */\nexport default function () {\n    function getLoaderRef(path, loaderName, state) {\n        if (!state.loaderRef) {\n            state.loaderRef = addNamed(path, 'load', loaderName);\n        }\n        return state.loaderRef;\n    }\n    function addDynamicImportDependency(dependency, state) {\n        // TODO [#3444]: state.dynamicImports seems unused and can probably be deleted\n        if (!state.dynamicImports) {\n            state.dynamicImports = [];\n        }\n        if (!state.dynamicImports.includes(dependency)) {\n            state.dynamicImports.push(dependency);\n        }\n    }\n    return {\n        Import(path, state) {\n            const { dynamicImports } = state.opts;\n            if (!dynamicImports) {\n                return;\n            }\n            const { loader, strictSpecifier } = dynamicImports;\n            const sourcePath = getImportSource(path);\n            if (strictSpecifier) {\n                validateImport(sourcePath, state);\n            }\n            if (loader) {\n                const loaderId = getLoaderRef(path, loader, state);\n                path.replaceWith(loaderId);\n                incrementMetricCounter(CompilerMetrics.DynamicImportTransform, state);\n            }\n            if (sourcePath.isStringLiteral()) {\n                addDynamicImportDependency(sourcePath.node.value, state);\n            }\n        },\n    };\n}\n//# sourceMappingURL=dynamic-imports.js.map","/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nexport default function ({ types: t }, path) {\n    const programPath = path.isProgram() ? path : path.findParent((node) => node.isProgram());\n    programPath.get('body').forEach((node) => {\n        if (node.isImportDeclaration()) {\n            const source = node.get('source');\n            if (source.type === 'StringLiteral' && source.node.value.endsWith('.scoped.css')) {\n                source.replaceWith(t.stringLiteral(source.node.value + '?scoped=true'));\n            }\n        }\n    });\n}\n//# sourceMappingURL=scope-css-imports.js.map","import { LWC_VERSION_COMMENT } from '@lwc/shared';\nexport default function compilerVersionNumber({ types: t }) {\n    return {\n        ClassBody(path) {\n            if (path.parent.superClass === null) {\n                // Components *must* extend from either LightningElement or some other superclass (e.g. a mixin).\n                // We can skip classes without a superclass to avoid adding unnecessary comments.\n                return;\n            }\n            // If the class body is empty, we want an inner comment. Otherwise we want it after the last child\n            // of the class body. In either case, we want it right before the `}` at the end of the function body.\n            if (path.node.body.length > 0) {\n                // E.g. `class Foo extends Lightning Element { /*LWC compiler v1.2.3*/ }`\n                t.addComment(path.node.body[path.node.body.length - 1], 'trailing', LWC_VERSION_COMMENT, \n                /* line */ false);\n            }\n            else {\n                // E.g. `class Foo extends Lightning Element { bar = 'baz'; /*LWC compiler v1.2.3*/ }`\n                t.addComment(path.node, 'inner', LWC_VERSION_COMMENT, /* line */ false);\n            }\n        },\n    };\n}\n//# sourceMappingURL=compiler-version-number.js.map","/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nimport component from './component';\nimport { decorators, removeImportedDecoratorSpecifiers, validateImportedLwcDecoratorUsage, } from './decorators';\nimport dedupeImports from './dedupe-imports';\nimport dynamicImports from './dynamic-imports';\nimport scopeCssImports from './scope-css-imports';\nimport compilerVersionNumber from './compiler-version-number';\nimport { getEngineImportSpecifiers } from './utils';\n/**\n * The transform is done in 2 passes:\n *    - First, apply in a single AST traversal the decorators and the component transformation.\n *    - Then, in a second path transform class properties using the official babel plugin \"babel-plugin-transform-class-properties\".\n */\nexport default function LwcClassTransform(api) {\n    const { ExportDefaultDeclaration: transformCreateRegisterComponent } = component(api);\n    const { Class: transformDecorators } = decorators(api);\n    const { Import: transformDynamicImports } = dynamicImports();\n    const { ClassBody: addCompilerVersionNumber } = compilerVersionNumber(api);\n    return {\n        manipulateOptions(opts, parserOpts) {\n            parserOpts.plugins.push('classProperties', [\n                'decorators',\n                { decoratorsBeforeExport: true },\n            ]);\n        },\n        visitor: {\n            // The LWC babel plugin is incompatible with other plugins. To get around this, we run the LWC babel plugin\n            // first by running all its traversals from this Program visitor.\n            Program: {\n                enter(path, state) {\n                    const engineImportSpecifiers = getEngineImportSpecifiers(path);\n                    // Validate the usage of LWC decorators.\n                    validateImportedLwcDecoratorUsage(engineImportSpecifiers, state);\n                    // Add ?scoped=true to *.scoped.css imports\n                    scopeCssImports(api, path);\n                },\n                exit(path) {\n                    const engineImportSpecifiers = getEngineImportSpecifiers(path);\n                    removeImportedDecoratorSpecifiers(engineImportSpecifiers);\n                    // Will eventually be removed to eliminate unnecessary complexity. Rollup already does this for us.\n                    dedupeImports(api)(path);\n                },\n            },\n            Import: transformDynamicImports,\n            Class: transformDecorators,\n            ClassBody: addCompilerVersionNumber,\n            ExportDefaultDeclaration: transformCreateRegisterComponent,\n        },\n    };\n}\n//# sourceMappingURL=index.js.map"],"names":["API_DECORATOR","TRACK_DECORATOR","validate","transform","WIRE_DECORATOR"],"mappings":"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"}